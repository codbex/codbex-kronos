name: Release

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: Release Version
        required: true
        default: 1.0.0
      snapshotVersion:
        description: Snapshot Version
        required: true
        default: 1.0.0-SNAPSHOT
        
run-name: 'version set to ${{ github.event.inputs.releaseVersion }} for release'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Cache local Maven repository
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-

    - name: Download sapmachine JDK 17
      run: |
        download_url="https://github.com/SAP/SapMachine/releases/download/sapmachine-17.0.2/sapmachine-jdk-17.0.2_linux-x64_bin.tar.gz"
        wget -O "${RUNNER_TEMP}/sapmachine-jdk-17.tar.gz" "${download_url}"

    - name: "Configure sapmachine JDK 17"
      uses: actions/setup-java@v3
      with:
        distribution: 'jdkfile'
        java-version: '17.0.2'
        jdkFile: ${{ runner.temp }}/sapmachine-jdk-17.tar.gz
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
        gpg-passphrase: GPG_PASSPHRASE
        architecture: x64

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        install: true

    - name: Set Multi-Builder Docker Buildx
      run: docker buildx create --use --name multi-builder --platform linux/arm64,linux/amd64,linux/arm64/v8

    - name: "Configure Git"
      run: |
        git fetch
        git checkout ${{ github.event.inputs.branch }}
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

    - name: "Set Kronos Version"
      run: echo KRONOS_VERSION=${{ github.event.inputs.releaseVersion }}  >> $GITHUB_ENV
      
    - name: "Maven: Set Release Version"
      run: mvn versions:set -DnewVersion=${{ github.event.inputs.releaseVersion }}

    - name: "Maven: Build"
      run: mvn clean install -Dmaven.javadoc.skip=false

    - name: "Docker: Login"
      run: docker login -u ${{secrets.DOCKER_USER}} -p ${{secrets.DOCKER_PASSWORD}} ${{secrets.DOCKER_REGISTRY}}

    - name: "Docker: Push Kronos"
      run: |
        cd releng/server
        cp -r "${JAVA_HOME}" jdk
        docker build --load -t ghcr.io/codbex/kronos:${{ env.KRONOS_VERSION }} --build-arg JDK_TYPE=external-jdk --build-arg JDK_HOME=jdk .
        docker push ghcr.io/codbex/kronos:${{ env.KRONOS_VERSION }}
        cd ../../

    - name: "Docker: Push Kronos for SAP Cloud Foundry"
      run: |
        cd releng/sap-cf
        cp -r "${JAVA_HOME}" jdk
        docker build --load -t ghcr.io/codbex/kronos-cf:${{ env.KRONOS_VERSION }} --build-arg JDK_TYPE=external-jdk --build-arg JDK_HOME=jdk .
        docker push ghcr.io/codbex/kronos-cf:${{ env.KRONOS_VERSION }}
        cd ../../

    - name: "Docker: Push Kronos for SAP Kyma"
      run: |
        cd releng/sap-kyma
        cp -r "${JAVA_HOME}" jdk
        docker build --load -t ghcr.io/codbex/kronos-kyma:${{ env.KRONOS_VERSION }} --build-arg JDK_TYPE=external-jdk --build-arg JDK_HOME=jdk .
        docker push ghcr.io/codbex/kronos-kyma:${{ env.KRONOS_VERSION }}
        cd ../../

    - name: "Docker: Push Kronos for SAP Kyma Runtime"
      run: |
        cd releng/sap-kyma-runtime
        docker build --load -t ghcr.io/codbex/kronos-kyma-runtime-base -f Dockerfile-base .
        docker push ghcr.io/codbex/kronos-kyma-runtime-base
        docker build --load -t ghcr.io/codbex/kronos-kyma-runtime .
        docker push ghcr.io/codbex/kronos-kyma-runtime
        docker build --load -t ghcr.io/codbex/kronos-kyma-runtime-distro -f Dockerfile-distro .
        docker push ghcr.io/codbex/kronos-kyma-runtime-distro
        cd ../../

    - name: "Maven: Publish Package"
      run: mvn deploy -P release -DskipTests
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

    - name: "Git: Commit Release Version"
      run: |
        git add **/pom.xml
        git commit -m "version set to ${{ github.event.inputs.releaseVersion }} for release"
        git checkout -b ${{ github.event.inputs.releaseVersion }}
        git checkout ${{ github.event.inputs.branch }}

    - name: "Maven: Set Snapshot Version"
      run: mvn versions:set -DnewVersion=${{ github.event.inputs.snapshotVersion }}

    - name: "Git: Commit Snapshot Version"
      run: |
        git add **/pom.xml
        git commit -m "version set to ${{ github.event.inputs.snapshotVersion }} for development"

    - name: Package WAR files
      run: |
        zip --junk-paths server releng/server/target/ROOT.war
        zip --junk-paths sap-cf releng/sap-cf/target/ROOT.war

    - name: Package Samples
      run: |
        cd samples/
        zip -r api-db api-db/*
        zip -r api-hdb api-hdb/*
        zip -r api-import api-import/*
        zip -r api-jobs api-jobs/*
        zip -r api-net api-net/*
        zip -r api-session api-session/*
        zip -r api-trace api-trace/*
        zip -r api-util api-util/*
        zip -r api-web api-web/*
        zip -r hdb-hdbdd-simple hdb-hdbdd-simple/*
        zip -r hdb-hdbsequence-simple hdb-hdbsequence-simple/*
        zip -r hdb-hdbstructure-simple hdb-hdbstructure-simple/*
        zip -r hdb-hdbtable-simple hdb-hdbtable-simple/*
        zip -r hdb-hdbti-simple hdb-hdbti-simple/*
        zip -r hdb-procedure-simple hdb-procedure-simple/*
        zip -r hdb-schema-simple hdb-schema-simple/*
        zip -r hdb-simple hdb-simple/*
        zip -r hdb-synonym-simple hdb-synonym-simple/*
        zip -r hdb-tablefunction-simple hdb-tablefunction-simple/*
        zip -r hdb-view-simple hdb-view-simple/*
        zip -r hdi-cube hdi-cube/*
        zip -r hdi-ext hdi-ext/*
        zip -r hdi-simple hdi-simple/*
        zip -r products products/*
        zip -r xsjs xsjs/*
        zip -r xsjs-simple xsjs-simple/*
        zip -r xsodata-navigations xsodata-navigations/*
        zip -r xsodata-simple xsodata-simple/*

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.KRONOS_VERSION }}
        name: ${{ env.KRONOS_VERSION }}
        draft: false
        prerelease: false
        files: |
          ./server.zip
          ./sap-cf.zip
          ./samples/api-db.zip
          ./samples/api-hdb.zip
          ./samples/api-import.zip
          ./samples/api-jobs.zip
          ./samples/api-net.zip
          ./samples/api-session.zip
          ./samples/api-trace.zip
          ./samples/api-util.zip
          ./samples/api-web.zip
          ./samples/products.zip
          ./samples/hdb-hdbsequence-simple.zip
          ./samples/hdb-hdbstructure-simple.zip
          ./samples/hdb-hdbtable-simple.zip
          ./samples/hdb-hdbti-simple.zip
          ./samples/hdb-hdbdd-simple.zip
          ./samples/hdb-procedure-simple.zip
          ./samples/hdb-schema-simple.zip
          ./samples/hdb-simple.zip
          ./samples/hdb-synonym-simple.zip
          ./samples/hdb-tablefunction-simple.zip
          ./samples/hdb-view-simple.zip
          ./samples/hdi-cube.zip
          ./samples/hdi-ext.zip
          ./samples/hdi-simple.zip
          ./samples/xsjs.zip
          ./samples/xsjs-simple.zip
          ./samples/xsodata-navigations.zip
          ./samples/xsodata-simple.zip
          
        body: |
          ## Kronos - ${{ env.KRONOS_VERSION }}

          #### Docker images:
            - [ghcr.io/codbex/kronos](https://ghcr.io/codbex/kronos) - Kronos Server.
            - [ghcr.io/codbex/kronos-cf](https://ghcr.io/codbex/kronos-cf) - Kronos Cloud Foundry.
            - [ghcr.io/codbex/kronos-kyma](https://ghcr.io/codbex/kronos-kyma) - Kronos Kyma.

          #### Available for download `*.war` packages:
            - [server](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/server.zip) - Kronos Server.
            - [sap-cf](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/sap-cf.zip) - Kronos Cloud Foundry.

          > _**Note:** Unzip the downloaded file to extract the `ROOT.war` binary._

          For more information go to [https://www.dirigible.io/help/setup/](https://www.dirigible.io/help/setup/).

          #### Available for download `*.zip` samples:
            - _**[products](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/products.zip) - Products Sample Application.**_
            - [api-db](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/api-db.zip) - XSJS API $.db.
            - [api-hdb](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/api-hdb.zip) - XSJS API $.hdb.
            - [api-import](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/api-import.zip) - XSJS API $.import.
            - [api-jobs](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/api-jobs.zip) - XSJS API $.jobs.
            - [api-net](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/api-net.zip) - XSJS API $.net.
            - [api-session](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/api-session.zip) - XSJS API $.session.
            - [api-trace](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/api-trace.zip) - XSJS API $.trace.
            - [api-util](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/api-util.zip) - XSJS API $.util.
            - [api-web](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/api-web.zip) - XSJS API $.web.
            - [hdb-hdbdd-simple](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/hdb-hdbdd-simple.zip) - HDBDD - Simple.
            - [hdb-hdbsequence-simple](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/hdb-hdbsequence-simple.zip) - HDBSequence - Simple.
            - [hdb-hdbstructure-simple](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/hdb-hdbstructure-simple.zip) - HDBStructure - Simple.
            - [hdb-hdbtable-simple](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/hdb-hdbtable-simple.zip) - HDBTable - Simple.
            - [hdb-hdbti-simple](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/hdb-hdbti-simple.zip) - HDBTI - Simple.
            - [hdb-procedure-simple](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/hdb-procedure-simple.zip) - HDBProcedure - Simple.
            - [hdb-schema-simple](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/hdb-schema-simple.zip) - HDBSchema - Simple.
            - [hdb-simple](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/hdb-simple.zip) - HDB Table.
            - [hdb-synonym-simple](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/hdb-synonym-simple.zip) - HDBSynonym - Simple.
            - [hdb-tablefunction-simple](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/hdb-tablefunction-simple.zip) - HDBTableFunction - Simple.
            - [hdb-view-simple](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/hdb-view-simple.zip) - HDBView - Simple.
            - [hdi-cube](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/hdi-cube.zip) - HDI Cube.
            - [hdi-ext](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/hdi-ext.zip) - HDI Ext.
            - [hdi-simple](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/hdi-simple.zip) - HDI.
            - [xsjs](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/xsjs.zip) - XSJS APIs.
            - [xsjs-simple](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/xsjs-simple.zip) - XSJS Hello World.
            - [xsodata-navigations](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/xsodata-navigations.zip) - XSOData - Navigations.
            - [xsodata-simple](https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/xsodata-simple.zip) - XSOData - Simple.

          ### Cloud Native Buildpacks

          #### Pack

          Available Buildpack Builders:
          - [ghcr.io/codbex/kronos-buildpacks-builder:${{ env.KRONOS_VERSION }}](https://ghcr.io/codbex/kronos-buildpacks-builder) - builder for local deployments.
          - [ghcr.io/codbex/kronos-buildpacks-builder-kyma:${{ env.KRONOS_VERSION }}](https://ghcr.io/codbex/kronos-buildpacks-builder-kyma) - builder for Kyma ready deployments.
          - [ghcr.io/codbex/kronos-buildpacks-builder-cf:${{ env.KRONOS_VERSION }}](https://ghcr.io/codbex/kronos-buildpacks-builder-cf) - builder for Cloud Foundry ready deployments

          Building Docker Image with **pack**:
          ```
          pack build --builder ghcr.io/codbex/kronos-buildpacks-builder:${{ env.KRONOS_VERSION }} <my-org>/<my-repository>
          ```
          > _**Note:** The command will package all sub-folders (`project1`, `project2`, etc.) into a Kronos docker image with the application sources._

          ### Cloud Foundry - SAP Java Buildpack

          **manifest.yaml**

          ```yaml
          applications:
          - name: <application-name>
            host: <host>
            memory: 2G
            buildpack: sap_java_buildpack
            path: ROOT.war
            env:
              JBP_CONFIG_COMPONENTS: "jres: ['com.sap.xs.java.buildpack.jdk.SAPMachineJDK']"
              JBP_CONFIG_SAP_MACHINE_JRE: 'jre: { version: 11.+ }'
            services:
              - <service-binding>
          ```

          #### Kpack

          - Install [Kpack](https://github.com/pivotal/kpack) on your Kubernetes/Kyma cluster
          - Create `ClusterStore`, `ClusterStack` and `Builder`:

          ```yaml
          apiVersion: kpack.io/v1alpha1
          kind: ClusterStore
          metadata:
            name: kronos-store
          spec:
            sources:
            - image: ghcr.io/codbex/kronos-buildpacks:${{ env.KRONOS_VERSION }}
          ---
          apiVersion: kpack.io/v1alpha1
          kind: ClusterStack
          metadata:
            name: kronos-stack
          spec:
            id: com.codbex.kronos
            buildImage:
              image: ghcr.io/codbex/kronos-buildpacks-stack-build-kyma:${{ env.KRONOS_VERSION }}
            runImage:
              image: ghcr.io/codbex/kronos-buildpacks-stack-run-kyma:${{ env.KRONOS_VERSION }}
          ---
          apiVersion: kpack.io/v1alpha1
          kind: Builder
          metadata:
            name: kronos-builder
          spec:
            serviceAccount: <your-service-account>
            tag: <your-docker-organization>/<your-docker-builder-repository>
            stack:
              name: kronos-stack
              kind: ClusterStack
            store:
              name: kronos-store
              kind: ClusterStore
            order:
            - group:
              - id: ghcr.io/codbex/kronos-buildpacks
          ```

          > _**Note**: Replace `<your-service-account>` with your ServiceAccount (sample could be found [here](https://github.com/codbex/codbex-kronos/blob/main/releng/buildpacks/kronos/kpack/service-account.yaml))._

          > _**Note**: Also replace `<your-docker-organization>/<your-docker-builder-repository>` with your Docker Repository, where the Docker Image Builder will be hosted (e.g. `my-organization/my-builder`)_

          #### Usage

          ```yaml
          apiVersion: kpack.io/v1alpha1
          kind: Image
          metadata:
            name: kronos-application
            namespace: default
          spec:
            tag: <your-docker-organization>/<your-application-docker-image-repository>
            serviceAccount: <your-service-account>
            builder:
              name: kronos-builder
              kind: Builder
            source:
              blob:
                url: https://github.com/codbex/codbex-kronos/releases/download/v${{ env.KRONOS_VERSION }}/products.zip
          ```

          > _**Note**: Replace `<your-service-account>` with your ServiceAccount (sample could be found [here](https://github.com/codbex/codbex-kronos/blob/main/releng/buildpacks/kronos/kpack/service-account.yaml))._

          > _**Note**: Also replace `<your-docker-organization>/<your-application-docker-image-repository>` with your Docker Repository, where the Docker Image Builder will be hosted (e.g. `my-organization/my-application`)_

    - name: "Git: Push Changes"
      run: |
        git push --set-upstream origin ${{ github.event.inputs.releaseVersion }}
        git push origin ${{ github.event.inputs.branch }}
