/*
 * Copyright (c) 2022 codbex or an codbex affiliate company and contributors
 *
 * All rights reserved. This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v2.0 which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v20.html
 *
 * SPDX-FileCopyrightText: 2022 codbex or an codbex affiliate company and contributors
 * SPDX-License-Identifier: EPL-2.0
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference
// Implementation, v2.3.0
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2020.11.26 at 10:54:28 AM EET
//

package com.codbex.kronos.parser.hdbcalculationview.ndb.bimodelcube;

import jakarta.xml.bind.annotation.XmlRegistry;

/**
 * This object contains factory methods for each Java content interface and Java element interface
 * generated in the com.sap.ndb.bimodelcube package. An ObjectFactory allows you to programatically
 * construct new instances of the Java representation for XML content. The Java representation of
 * XML content can consist of schema derived interfaces and classes representing the binding of
 * schema type definitions, element declarations and model groups. Factory methods for each of these
 * are provided in this class.
 */
@XmlRegistry
public class ObjectFactory {

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for
     * package: com.sap.ndb.bimodelcube
     */
    public ObjectFactory() {}

    /**
     * Create an instance of {@link Cube }.
     *
     * @return the cube
     */
    public Cube createCube() {
        return new Cube();
    }

    /**
     * Create an instance of {@link MeasureGroup }.
     *
     * @return the measure group
     */
    public MeasureGroup createMeasureGroup() {
        return new MeasureGroup();
    }

    /**
     * Create an instance of {@link BaseMeasures }.
     *
     * @return the base measures
     */
    public BaseMeasures createBaseMeasures() {
        return new BaseMeasures();
    }

    /**
     * Create an instance of {@link CalculatedMeasures }.
     *
     * @return the calculated measures
     */
    public CalculatedMeasures createCalculatedMeasures() {
        return new CalculatedMeasures();
    }

    /**
     * Create an instance of {@link RestrictedMeasures }.
     *
     * @return the restricted measures
     */
    public RestrictedMeasures createRestrictedMeasures() {
        return new RestrictedMeasures();
    }

    /**
     * Create an instance of {@link Measure }.
     *
     * @return the measure
     */
    public Measure createMeasure() {
        return new Measure();
    }

    /**
     * Create an instance of {@link MeasureDimensionality }.
     *
     * @return the measure dimensionality
     */
    public MeasureDimensionality createMeasureDimensionality() {
        return new MeasureDimensionality();
    }

    /**
     * Create an instance of {@link BaseMeasure }.
     *
     * @return the base measure
     */
    public BaseMeasure createBaseMeasure() {
        return new BaseMeasure();
    }

    /**
     * Create an instance of {@link CalculatedMeasure }.
     *
     * @return the calculated measure
     */
    public CalculatedMeasure createCalculatedMeasure() {
        return new CalculatedMeasure();
    }

    /**
     * Create an instance of {@link RestrictedMeasure }.
     *
     * @return the restricted measure
     */
    public RestrictedMeasure createRestrictedMeasure() {
        return new RestrictedMeasure();
    }

    /**
     * Create an instance of {@link LocalDimensions }.
     *
     * @return the local dimensions
     */
    public LocalDimensions createLocalDimensions() {
        return new LocalDimensions();
    }

    /**
     * Create an instance of {@link SortAttribute }.
     *
     * @return the sort attribute
     */
    public SortAttribute createSortAttribute() {
        return new SortAttribute();
    }

    /**
     * Create an instance of {@link SortAttributes }.
     *
     * @return the sort attributes
     */
    public SortAttributes createSortAttributes() {
        return new SortAttributes();
    }

}
