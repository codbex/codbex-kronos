/*
 * Copyright (c) 2022-2023 codbex or an codbex affiliate company and contributors
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v2.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v20.html
 *
 * SPDX-FileCopyrightText: 2022 codbex or an codbex affiliate company and contributors
 * SPDX-License-Identifier: EPL-2.0
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.11.26 at 10:54:28 AM EET 
//


package com.codbex.kronos.parser.hdbcalculationview.ndb.datamodelhierarchy;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the com.sap.ndb.datamodelhierarchy package.
 * An ObjectFactory allows you to programatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and model
 * groups.  Factory methods for each of these are
 * provided in this class.
 */
@XmlRegistry
public class ObjectFactory {


  /**
   * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.sap.ndb.datamodelhierarchy
   */
  public ObjectFactory() {
  }

  /**
   * Create an instance of {@link LeveledHierarchy }.
   *
   * @return the leveled hierarchy
   */
  public LeveledHierarchy createLeveledHierarchy() {
    return new LeveledHierarchy();
  }

  /**
   * Create an instance of {@link Level }.
   *
   * @return the level
   */
  public Level createLevel() {
    return new Level();
  }

  /**
   * Create an instance of {@link ParentChildHierarchy }.
   *
   * @return the parent child hierarchy
   */
  public ParentChildHierarchy createParentChildHierarchy() {
    return new ParentChildHierarchy();
  }

  /**
   * Create an instance of {@link ParentDefinition }.
   *
   * @return the parent definition
   */
  public ParentDefinition createParentDefinition() {
    return new ParentDefinition();
  }

  /**
   * Create an instance of {@link HierarchyTimeProperties }.
   *
   * @return the hierarchy time properties
   */
  public HierarchyTimeProperties createHierarchyTimeProperties() {
    return new HierarchyTimeProperties();
  }

  /**
   * Create an instance of {@link EdgeAttribute }.
   *
   * @return the edge attribute
   */
  public EdgeAttribute createEdgeAttribute() {
    return new EdgeAttribute();
  }

  /**
   * Create an instance of {@link HierarchyParameterization }.
   *
   * @return the hierarchy parameterization
   */
  public HierarchyParameterization createHierarchyParameterization() {
    return new HierarchyParameterization();
  }

  /**
   * Create an instance of {@link HierarchyLeveledParameterization }.
   *
   * @return the hierarchy leveled parameterization
   */
  public HierarchyLeveledParameterization createHierarchyLeveledParameterization() {
    return new HierarchyLeveledParameterization();
  }

  /**
   * Create an instance of {@link Levels }.
   *
   * @return the levels
   */
  public Levels createLevels() {
    return new Levels();
  }

  /**
   * Create an instance of {@link HierarchyTemporalParameterization }.
   *
   * @return the hierarchy temporal parameterization
   */
  public HierarchyTemporalParameterization createHierarchyTemporalParameterization() {
    return new HierarchyTemporalParameterization();
  }

  /**
   * Create an instance of {@link HierarchySpanTreeParameterization }.
   *
   * @return the hierarchy span tree parameterization
   */
  public HierarchySpanTreeParameterization createHierarchySpanTreeParameterization() {
    return new HierarchySpanTreeParameterization();
  }

  /**
   * Create an instance of {@link HierarchyDescendantsParameterization }.
   *
   * @return the hierarchy descendants parameterization
   */
  public HierarchyDescendantsParameterization createHierarchyDescendantsParameterization() {
    return new HierarchyDescendantsParameterization();
  }

  /**
   * Create an instance of {@link HierarchyAncestorsParameterization }.
   *
   * @return the hierarchy ancestors parameterization
   */
  public HierarchyAncestorsParameterization createHierarchyAncestorsParameterization() {
    return new HierarchyAncestorsParameterization();
  }

  /**
   * Create an instance of {@link HierarchySiblingsParameterization }.
   *
   * @return the hierarchy siblings parameterization
   */
  public HierarchySiblingsParameterization createHierarchySiblingsParameterization() {
    return new HierarchySiblingsParameterization();
  }

  /**
   * Create an instance of {@link Start }.
   *
   * @return the start
   */
  public Start createStart() {
    return new Start();
  }

}
