/*
 * Copyright (c) 2022 codbex or an codbex affiliate company and contributors
 *
 * All rights reserved. This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v2.0 which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v20.html
 *
 * SPDX-FileCopyrightText: 2022 codbex or an codbex affiliate company and contributors
 * SPDX-License-Identifier: EPL-2.0
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference
// Implementation, v2.3.0
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2020.11.26 at 10:54:28 AM EET
//

package com.codbex.kronos.parser.hdbcalculationview.ndb.bimodeldimension;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;

/**
 * Java class for DimensionType.
 *
 * The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;simpleType name="DimensionType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN"&gt;
 *     &lt;enumeration value="Unknown"/&gt;
 *     &lt;enumeration value="Time"/&gt;
 *     &lt;enumeration value="Measure"/&gt;
 *     &lt;enumeration value="Standard"/&gt;
 *     &lt;enumeration value="Geography"/&gt;
 *     &lt;enumeration value="Customer"/&gt;
 *     &lt;enumeration value="Product"/&gt;
 *     &lt;enumeration value="Organization"/&gt;
 *     &lt;enumeration value="Employee"/&gt;
 *     &lt;enumeration value="Currency"/&gt;
 *     &lt;enumeration value="Channel"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 */
@XmlType(name = "DimensionType")
@XmlEnum
public enum DimensionType {

    /** The unknown. */
    @XmlEnumValue("Unknown")
    UNKNOWN("Unknown"),

    /** The time. */
    @XmlEnumValue("Time")
    TIME("Time"),

    /** The measure. */
    @XmlEnumValue("Measure")
    MEASURE("Measure"),

    /** The standard. */
    @XmlEnumValue("Standard")
    STANDARD("Standard"),

    /** The geography. */
    @XmlEnumValue("Geography")
    GEOGRAPHY("Geography"),

    /** The customer. */
    @XmlEnumValue("Customer")
    CUSTOMER("Customer"),

    /** The product. */
    @XmlEnumValue("Product")
    PRODUCT("Product"),

    /** The organization. */
    @XmlEnumValue("Organization")
    ORGANIZATION("Organization"),

    /** The employee. */
    @XmlEnumValue("Employee")
    EMPLOYEE("Employee"),

    /** The currency. */
    @XmlEnumValue("Currency")
    CURRENCY("Currency"),

    /** The channel. */
    @XmlEnumValue("Channel")
    CHANNEL("Channel");

    /** The value. */
    private final String value;

    /**
     * Instantiates a new dimension type.
     *
     * @param v the v
     */
    DimensionType(String v) {
        value = v;
    }

    /**
     * From value.
     *
     * @param v the v
     * @return the dimension type
     */
    public static DimensionType fromValue(String v) {
        for (DimensionType c : DimensionType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

    /**
     * Value.
     *
     * @return the string
     */
    public String value() {
        return value;
    }

}
