/*
 * Copyright (c) 2022 codbex or an codbex affiliate company and contributors
 *
 * All rights reserved. This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v2.0 which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v20.html
 *
 * SPDX-FileCopyrightText: 2022 codbex or an codbex affiliate company and contributors
 * SPDX-License-Identifier: EPL-2.0
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference
// Implementation, v2.3.0
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2020.11.27 at 08:01:21 PM EET
//

package com.codbex.kronos.parser.calculationview.ndb;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

/**
 * This object contains factory methods for each Java content interface and Java element interface
 * generated in the com.sap.ndb package. An ObjectFactory allows you to programatically construct
 * new instances of the Java representation for XML content. The Java representation of XML content
 * can consist of schema derived interfaces and classes representing the binding of schema type
 * definitions, element declarations and model groups. Factory methods for each of these are
 * provided in this class.
 */
@XmlRegistry
public class ObjectFactory {

    /** The Constant _Origin_QNAME. */
    private final static QName _Origin_QNAME = new QName("", "origin");

    /** The Constant _LocalVariables_QNAME. */
    private final static QName _LocalVariables_QNAME = new QName("", "localVariables");

    /** The Constant _VariableMappings_QNAME. */
    private final static QName _VariableMappings_QNAME = new QName("", "variableMappings");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for
     * package: com.sap.ndb
     */
    public ObjectFactory() {}

    /**
     * Create an instance of {@link DataSources }.
     *
     * @return the data sources
     */
    public DataSources createDataSources() {
        return new DataSources();
    }

    /**
     * Create an instance of {@link CalculationViews }.
     *
     * @return the calculation views
     */
    public CalculationViews createCalculationViews() {
        return new CalculationViews();
    }

    /**
     * Create an instance of {@link LogicalModel }.
     *
     * @return the logical model
     */
    public LogicalModel createLogicalModel() {
        return new LogicalModel();
    }

    /**
     * Create an instance of {@link Layout }
     *
     * @return the layout
     */
    public Layout createLayout() {
        return new Layout();
    }

    /**
     * Create an instance of {@link Layout.Shapes }
     *
     * @return the shapes
     */
    public Layout.Shapes createLayoutShapes() {
        return new Layout.Shapes();
    }

    /**
     * Create an instance of {@link Layout.Shapes.Shape }
     *
     * @return the shape
     */
    public Layout.Shapes.Shape createLayoutShapesShape() {
        return new Layout.Shapes.Shape();
    }

    /**
     * Create an instance of {@link LogicalModel.LocalDimensions }
     *
     * @return the local dimensions
     */
    public LogicalModel.LocalDimensions createLogicalModelLocalDimensions() {
        return new LogicalModel.LocalDimensions();
    }

    /**
     * Create an instance of {@link LogicalModel.LocalDimensions.LocalDimension }
     *
     * @return the local dimension
     */
    public LogicalModel.LocalDimensions.LocalDimension createLogicalModelLocalDimensionsLocalDimension() {
        return new LogicalModel.LocalDimensions.LocalDimension();
    }

    /**
     * Create an instance of {@link LogicalModel.LocalDimensions.LocalDimension.Hierarchies }
     *
     * @return the hierarchies
     */
    public LogicalModel.LocalDimensions.LocalDimension.Hierarchies createLogicalModelLocalDimensionsLocalDimensionHierarchies() {
        return new LogicalModel.LocalDimensions.LocalDimension.Hierarchies();
    }

    /**
     * Create an instance of {@link LogicalModel.LocalDimensions.LocalDimension.Hierarchies.Hierarchy }
     *
     * @return the hierarchy
     */
    public LogicalModel.LocalDimensions.LocalDimension.Hierarchies.Hierarchy createLogicalModelLocalDimensionsLocalDimensionHierarchiesHierarchy() {
        return new LogicalModel.LocalDimensions.LocalDimension.Hierarchies.Hierarchy();
    }

    /**
     * Create an instance of
     * {@link LogicalModel.LocalDimensions.LocalDimension.Hierarchies.Hierarchy.Levels }
     *
     * @return the levels
     */
    public LogicalModel.LocalDimensions.LocalDimension.Hierarchies.Hierarchy.Levels createLogicalModelLocalDimensionsLocalDimensionHierarchiesHierarchyLevels() {
        return new LogicalModel.LocalDimensions.LocalDimension.Hierarchies.Hierarchy.Levels();
    }

    /**
     * Create an instance of {@link LogicalModel.CalculatedMeasures }
     *
     * @return the calculated measures
     */
    public LogicalModel.CalculatedMeasures createLogicalModelCalculatedMeasures() {
        return new LogicalModel.CalculatedMeasures();
    }

    /**
     * Create an instance of {@link LogicalModel.CalculatedMeasures.Measure }
     *
     * @return the measure
     */
    public LogicalModel.CalculatedMeasures.Measure createLogicalModelCalculatedMeasuresMeasure() {
        return new LogicalModel.CalculatedMeasures.Measure();
    }

    /**
     * Create an instance of {@link LogicalModel.CalculatedMeasures.Measure.ExceptionAggregation }
     *
     * @return the exception aggregation
     */
    public LogicalModel.CalculatedMeasures.Measure.ExceptionAggregation createLogicalModelCalculatedMeasuresMeasureExceptionAggregation() {
        return new LogicalModel.CalculatedMeasures.Measure.ExceptionAggregation();
    }

    /**
     * Create an instance of {@link LogicalModel.BaseMeasures }
     *
     * @return the base measures
     */
    public LogicalModel.BaseMeasures createLogicalModelBaseMeasures() {
        return new LogicalModel.BaseMeasures();
    }

    /**
     * Create an instance of {@link LogicalModel.BaseMeasures.Measure }
     *
     * @return the measure
     */
    public LogicalModel.BaseMeasures.Measure createLogicalModelBaseMeasuresMeasure() {
        return new LogicalModel.BaseMeasures.Measure();
    }

    /**
     * Create an instance of {@link LogicalModel.PrivateDataFoundation }
     *
     * @return the private data foundation
     */
    public LogicalModel.PrivateDataFoundation createLogicalModelPrivateDataFoundation() {
        return new LogicalModel.PrivateDataFoundation();
    }

    /**
     * Create an instance of {@link LogicalModel.Attributes }
     *
     * @return the attributes
     */
    public LogicalModel.Attributes createLogicalModelAttributes() {
        return new LogicalModel.Attributes();
    }

    /**
     * Create an instance of {@link LogicalModel.Attributes.Attribute }
     *
     * @return the attribute
     */
    public LogicalModel.Attributes.Attribute createLogicalModelAttributesAttribute() {
        return new LogicalModel.Attributes.Attribute();
    }

    /**
     * Create an instance of {@link CalculationViews.CalculationView }
     *
     * @return the calculation view
     */
    public CalculationViews.CalculationView createCalculationViewsCalculationView() {
        return new CalculationViews.CalculationView();
    }

    /**
     * Create an instance of {@link CalculationViews.CalculationView.Input }
     *
     * @return the input
     */
    public CalculationViews.CalculationView.Input createCalculationViewsCalculationViewInput() {
        return new CalculationViews.CalculationView.Input();
    }

    /**
     * Create an instance of {@link CalculationViews.CalculationView.ViewAttributes }
     *
     * @return the view attributes
     */
    public CalculationViews.CalculationView.ViewAttributes createCalculationViewsCalculationViewViewAttributes() {
        return new CalculationViews.CalculationView.ViewAttributes();
    }

    /**
     * Create an instance of {@link DataSources.DataSource }
     *
     * @return the data source
     */
    public DataSources.DataSource createDataSourcesDataSource() {
        return new DataSources.DataSource();
    }

    /**
     * Create an instance of {@link Descriptions }
     *
     * @return the descriptions
     */
    public Descriptions createDescriptions() {
        return new Descriptions();
    }

    /**
     * Create an instance of {@link Metadata }.
     *
     * @return the metadata
     */
    public Metadata createMetadata() {
        return new Metadata();
    }

    /**
     * Create an instance of {@link DefaultSchema }.
     *
     * @return the default schema
     */
    public DefaultSchema createDefaultSchema() {
        return new DefaultSchema();
    }

    /**
     * Create an instance of {@link InformationModelLayout }.
     *
     * @return the information model layout
     */
    public InformationModelLayout createInformationModelLayout() {
        return new InformationModelLayout();
    }

    /**
     * Create an instance of {@link CalculationScenario }.
     *
     * @return the calculation scenario
     */
    public CalculationScenario createCalculationScenario() {
        return new CalculationScenario();
    }

    /**
     * Create an instance of {@link Layout.Shapes.Shape.UpperLeftCorner }
     *
     * @return the upper left corner
     */
    public Layout.Shapes.Shape.UpperLeftCorner createLayoutShapesShapeUpperLeftCorner() {
        return new Layout.Shapes.Shape.UpperLeftCorner();
    }

    /**
     * Create an instance of {@link Layout.Shapes.Shape.RectangleSize }
     *
     * @return the rectangle size
     */
    public Layout.Shapes.Shape.RectangleSize createLayoutShapesShapeRectangleSize() {
        return new Layout.Shapes.Shape.RectangleSize();
    }

    /**
     * Create an instance of
     * {@link LogicalModel.LocalDimensions.LocalDimension.Hierarchies.Hierarchy.Descriptions }
     *
     * @return the descriptions
     */
    public LogicalModel.LocalDimensions.LocalDimension.Hierarchies.Hierarchy.Descriptions createLogicalModelLocalDimensionsLocalDimensionHierarchiesHierarchyDescriptions() {
        return new LogicalModel.LocalDimensions.LocalDimension.Hierarchies.Hierarchy.Descriptions();
    }

    /**
     * Create an instance of
     * {@link LogicalModel.LocalDimensions.LocalDimension.Hierarchies.Hierarchy.Levels.Level }
     *
     * @return the level
     */
    public LogicalModel.LocalDimensions.LocalDimension.Hierarchies.Hierarchy.Levels.Level createLogicalModelLocalDimensionsLocalDimensionHierarchiesHierarchyLevelsLevel() {
        return new LogicalModel.LocalDimensions.LocalDimension.Hierarchies.Hierarchy.Levels.Level();
    }

    /**
     * Create an instance of {@link LogicalModel.CalculatedMeasures.Measure.Descriptions }
     *
     * @return the descriptions
     */
    public LogicalModel.CalculatedMeasures.Measure.Descriptions createLogicalModelCalculatedMeasuresMeasureDescriptions() {
        return new LogicalModel.CalculatedMeasures.Measure.Descriptions();
    }

    /**
     * Create an instance of
     * {@link LogicalModel.CalculatedMeasures.Measure.ExceptionAggregation.Attribute }
     *
     * @return the attribute
     */
    public LogicalModel.CalculatedMeasures.Measure.ExceptionAggregation.Attribute createLogicalModelCalculatedMeasuresMeasureExceptionAggregationAttribute() {
        return new LogicalModel.CalculatedMeasures.Measure.ExceptionAggregation.Attribute();
    }

    /**
     * Create an instance of {@link LogicalModel.BaseMeasures.Measure.Descriptions }
     *
     * @return the descriptions
     */
    public LogicalModel.BaseMeasures.Measure.Descriptions createLogicalModelBaseMeasuresMeasureDescriptions() {
        return new LogicalModel.BaseMeasures.Measure.Descriptions();
    }

    /**
     * Create an instance of {@link LogicalModel.BaseMeasures.Measure.MeasureMapping }
     *
     * @return the measure mapping
     */
    public LogicalModel.BaseMeasures.Measure.MeasureMapping createLogicalModelBaseMeasuresMeasureMeasureMapping() {
        return new LogicalModel.BaseMeasures.Measure.MeasureMapping();
    }

    /**
     * Create an instance of {@link LogicalModel.PrivateDataFoundation.Layout }
     *
     * @return the layout
     */
    public LogicalModel.PrivateDataFoundation.Layout createLogicalModelPrivateDataFoundationLayout() {
        return new LogicalModel.PrivateDataFoundation.Layout();
    }

    /**
     * Create an instance of {@link LogicalModel.Attributes.Attribute.Descriptions }
     *
     * @return the descriptions
     */
    public LogicalModel.Attributes.Attribute.Descriptions createLogicalModelAttributesAttributeDescriptions() {
        return new LogicalModel.Attributes.Attribute.Descriptions();
    }

    /**
     * Create an instance of {@link LogicalModel.Attributes.Attribute.KeyMapping }
     *
     * @return the key mapping
     */
    public LogicalModel.Attributes.Attribute.KeyMapping createLogicalModelAttributesAttributeKeyMapping() {
        return new LogicalModel.Attributes.Attribute.KeyMapping();
    }

    /**
     * Create an instance of {@link CalculationViews.CalculationView.JoinAttribute }
     *
     * @return the join attribute
     */
    public CalculationViews.CalculationView.JoinAttribute createCalculationViewsCalculationViewJoinAttribute() {
        return new CalculationViews.CalculationView.JoinAttribute();
    }

    /**
     * Create an instance of {@link CalculationViews.CalculationView.Input.Mapping }
     *
     * @return the mapping
     */
    public CalculationViews.CalculationView.Input.Mapping createCalculationViewsCalculationViewInputMapping() {
        return new CalculationViews.CalculationView.Input.Mapping();
    }

    /**
     * Create an instance of {@link CalculationViews.CalculationView.ViewAttributes.ViewAttribute }
     *
     * @return the view attribute
     */
    public CalculationViews.CalculationView.ViewAttributes.ViewAttribute createCalculationViewsCalculationViewViewAttributesViewAttribute() {
        return new CalculationViews.CalculationView.ViewAttributes.ViewAttribute();
    }

    /**
     * Create an instance of {@link DataSources.DataSource.ViewAttributes }
     *
     * @return the view attributes
     */
    public DataSources.DataSource.ViewAttributes createDataSourcesDataSourceViewAttributes() {
        return new DataSources.DataSource.ViewAttributes();
    }

    /**
     * Create an instance of {@link DataSources.DataSource.ColumnObject }
     *
     * @return the column object
     */
    public DataSources.DataSource.ColumnObject createDataSourcesDataSourceColumnObject() {
        return new DataSources.DataSource.ColumnObject();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}.
     *
     * @param value Java instance representing xml element's value.
     * @return the new instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "origin")
    public JAXBElement<String> createOrigin(String value) {
        return new JAXBElement<String>(_Origin_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}.
     *
     * @param value Java instance representing xml element's value.
     * @return the new instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "localVariables")
    public JAXBElement<String> createLocalVariables(String value) {
        return new JAXBElement<String>(_LocalVariables_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}.
     *
     * @param value Java instance representing xml element's value.
     * @return the new instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "variableMappings")
    public JAXBElement<String> createVariableMappings(String value) {
        return new JAXBElement<String>(_VariableMappings_QNAME, String.class, null, value);
    }

}
